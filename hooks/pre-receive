#!/bin/sh
#
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#echo "============================================"
#echo "||Jenkins is being fixed by Administrator.||"
#echo "||    Please wait until fix finished.     ||"
#echo "============================================"
#exit 1

#################################################################
#The branch that can be pushed   ---------Change the branch name---------
BRANCH_PUSH=work
#Path of project       ---------you can Change the path-----------
PATH_PROJECT=/e/SVTI/Code
#################################################################
#The status file path  
GIT_STAT_TXT=$PATH_PROJECT/.git/sys_status.txt
#To save who is pushing or CAing
GIT_PUSH_WHO_TXT=$PATH_PROJECT/.git/hook_who_push.txt

#show log
#pre_log_all=$(git log --branches test --abbrev-commit)
#echo `date` >> $GIT_INFO_TXT

#get arguments of the shell file
read argin

OldId=$(echo $argin | awk '{print $1}')
NewId=$(echo $argin | awk '{print $2}')
BRANCH_COMMIT=$(echo $argin | awk '{print $3}')

echo "OldCommit=$OldId"
echo "NewCommit=$NewId"
echo "Branch=$BRANCH_COMMIT"
echo "pwd=`pwd`"

# Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

#Only enable BRANCH_PUSH to be pushed
if [ "$BRANCH_COMMIT" != "refs/heads/$BRANCH_PUSH" ]
then
	echo 
    echo "===================================="
	echo "|| You can not push to the branch ||"
	echo "|| Please push to branch $BRANCH_PUSH     ||"
	echo "===================================="
	exit 1
fi

#echo stop > $GIT_STAT_TXT
#if status is not "stop",failed
if [ -e $GIT_STAT_TXT ]
then
	status=$(head -n 1 $GIT_STAT_TXT)
	if [ "${status:0:4}" != "stop" ]
	then
		echo "=================================================="
		echo "|| Somebody is pushing, please try again later. ||"
		echo "==================================================" 
        Somebody=$(head -n 1 $GIT_PUSH_WHO_TXT)
        StartTime=$(head -n 2 $GIT_PUSH_WHO_TXT | tail -n 1)
        echo "Somebody = ${Somebody/@*/}"
        echo "StartTime = $StartTime"
		echo "status = $status"
		exit 1
	fi
fi

#say hello to program "Git-Auto-CA.exe"
echo -e "hello\r" > $GIT_STAT_TXT

#if do not receive answer within 3 seconds,failed
sleep 1
status=$(head -n 1 $GIT_STAT_TXT)
if [ "$status" != "fine" ]
then
    sleep 2
    status=$(head -n 1 $GIT_STAT_TXT)
    if [ "$status" != "fine" ]
    then
        echo "=================================================="
		echo "|| Please run Git_AutoCA.exe on the git server. ||"
		echo "=================================================="
        echo -e "stop\r" > $GIT_STAT_TXT
        exit 1
    fi
    
fi

exit 0
